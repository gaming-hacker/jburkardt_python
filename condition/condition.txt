Tue Oct 19 11:26:02 2021

CONDITION_TEST
  Python version: 3.6.9
  Test condition()

COMBIN_TEST
  Python version: 3.6.9
  COMBIN computes the COMBIN matrix.

  COMBIN matrix:

  Col:       0             1             2             3       
  Row
      0 :         7.6           5.4           5.4           5.4  
      1 :         5.4           7.6           5.4           5.4  
      2 :         5.4           5.4           7.6           5.4  
      3 :         5.4           5.4           5.4           7.6  

COMBIN_TEST
  Normal end of execution.

CONEX1_TEST
  Python version: 3.6.9
  CONEX1 computes the CONEX1 matrix.

  CONEX1 matrix:

  Col:       0             1             2             3       
  Row
      0 :           1            -1      -164.816             0  
      1 :           0             1        82.408       -82.408  
      2 :           0             1        83.408       -83.408  
      3 :           0             0             0        82.408  

CONEX1_TEST
  Normal end of execution.

CONEX2_TEST
  Python version: 3.6.9
  CONEX2 computes the CONEX2 matrix.

  CONEX2 matrix:

  Col:       0             1             2       
  Row
      0 :           1      0.999738            -2  
      1 :           0     0.0161771    -0.0161771  
      2 :           0             0             1  

CONEX2_TEST
  Normal end of execution.

CONEX3_TEST
  Python version: 3.6.9
  CONEX3 computes the CONEX3 matrix.

  CONEX3 matrix:

  Col:       0             1             2             3             4       
  Row
      0 :           1             0             0             0             0  
      1 :          -1             1             0             0             0  
      2 :          -1            -1             1             0             0  
      3 :          -1            -1            -1             1             0  
      4 :          -1            -1            -1            -1            -1  

CONEX3_TEST
  Normal end of execution.

CONEX4_TEST
  Python version: 3.6.9
  CONEX4 computes the CONEX4 matrix.

  CONEX4 matrix:

  Col:       0             1             2             3       
  Row
      0 :           7            10             8             7  
      1 :           6             8            10             9  
      2 :           5             7             9            10  
      3 :           5             7             6             5  

CONEX4_TEST
  Normal end of execution.

I4VEC_PRINT_TEST
  Python version: 3.6.9
  I4VEC_PRINT prints an I4VEC.

  Here is an I4VEC:

     0      91
     1      92
     2      93
     3      94

I4VEC_PRINT_TEST:
  Normal end of execution.

KAHAN_TEST
  Python version: 3.6.9
  KAHAN computes the KAHAN matrix.

  KAHAN matrix:

  Col:       0             1             2             3             4       
  Row
      0 :    0.305165     -0.290608     -0.290608     -0.290608     -0.290608  
      1 :           0     0.0931254    -0.0886833    -0.0886833    -0.0886833  
      2 :           0             0     0.0284186     -0.027063     -0.027063  
      3 :           0             0             0    0.00867234   -0.00825867  
      4 :           0             0             0             0    0.00264649  

KAHAN_TEST
  Normal end of execution.

r8_sign_test():
  Python version: 3.6.9
  r8_sign() returns the sign of an R8.

     R8     R8_SIGN(R8)

   -1.2500        -1
   -0.2500        -1
    0.0000         1
    0.5000         1
    9.0000         1

r8_sign_test():
  Normal end of execution.

R8GE_FA_TEST01
  Python version: 3.6.9
  For a matrix in general storage,
  R8GE_FA computes the LU factors,
  R8GE_SL solves a factored system.

  Matrix order N = 10

  Solution:

     0:             1
     1:             2
     2:             3
     3:             4
     4:             5
     5:             6
     6:             7
     7:             8
     8:             9
     9:            10

  Solution:

     0:             1
     1:             1
     2:             1
     3:             1
     4:             1
     5:             1
     6:             1
     7:             1
     8:             1
     9:             1

  Solution of transposed system:

     0:             1
     1:             2
     2:             3
     3:             4
     4:             5
     5:             6
     6:             7
     7:             8
     8:             9
     9:            10

R8GE_FA_TEST01
  Normal end of execution.

R8GE_FA_TEST02
  Python version: 3.6.9
  For a matrix in general storage,
  R8GE_FA computes the LU factors,
  R8GE_SL solves a factored system.

  Matrix order N = 5

  The matrix:

  Col:       0             1             2             3             4       
  Row
      0 :    0.963588      0.772559      0.778322       0.88835       0.62419  
      1 :    0.989026       0.80893       0.69601     0.0960767      0.100305  
      2 :    0.543655      0.484081      0.672194      0.283694     0.0453209  
      3 :    0.177758      0.457014      0.405702      0.728687       0.69038  
      4 :    0.351405      0.632974      0.242725      0.813434      0.698258  

  The compressed LU factors:

  Col:       0             1             2             3             4       
  Row
      0 :    0.989026       0.80893       0.69601     0.0960767      0.100305  
      1 :    -0.97428      0.345558   -0.00457026      0.779298      0.662619  
      2 :   -0.549687     -0.114085      0.290128      0.141976    -0.0854105  
      3 :   -0.179731     -0.901802     -0.981393      0.780909      0.585753  
      4 :   -0.355304     0.0450451     -0.344699      0.167353       0.25665  

  The pivot vector P:

     0       1
     1       4
     2       2
     3       4
     4       4

  Solution:

     0:             1
     1:             2
     2:             3
     3:             4
     4:             5

R8GE_FA_TEST02
  Normal end of execution.

R8MAT_NORM_L1_TEST
  Python version: 3.6.9
  R8MAT_NORM_L1 computes the L1 norm of an R8MAT;

  A:

  Col:       0             1             2             3       
  Row
      0 :           1            -4             2             0  
      1 :           3            -3             5            -4  
      2 :           1             3             2             0  
      3 :           4             2             0             5  
      4 :           4             0            -2             4  

  Computed L1 norm = 13

R8MAT_NORM_L1_TEST
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

r8vec_max_abs_index_test():
  Python version: 3.6.9
  r8vec_max_abs_index(): index of entry of maximum absolute value

  Input vector:

     0:       7.74645
     1:    -0.0282257
     2:       4.91922
     3:      -6.73868
     4:      -9.64078
     5:      0.140914
     6:       0.85995
     7:      -3.50843
     8:      -6.98234
     9:       1.17976

  Maximum index: 4

r8vec_max_abs_index_test():
  Normal end of execution.

r8vec_norm_l1_test():
  Python version: 3.6.9
  r8vec_norm_l1() computes the L1 norm of an R8VEC.

  Input vector:

     0:       2.59777
     1:      -7.08944
     2:       4.30322
     3:      -4.95275
     4:       4.59224
     5:       -4.0548
     6:      -2.46359
     7:      -6.33071
     8:       6.75943
     9:       9.30197

  L1 norm = 52.4459

r8vec_norm_l1_test():
  Normal end of execution.

r8vec_print_test():
  Python version: 3.6.9
  r8vec_print() prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

r8vec_print_test():
  Normal end of execution.

r8vec_uniform_unit_test():
  Python version: 3.6.9
  r8vec_uniform_unit() returns a random R8VEC
  on the surface of the unit M sphere.


  Vector:

     0:     -0.662189
     1:      0.260113
     2:      0.167996
     3:    -0.0986835
     4:      0.675193

  Vector:

     0:      0.575465
     1:      0.312966
     2:    -0.0387628
     3:     -0.750264
     4:     0.0805807

  Vector:

     0:      0.770209
     1:     -0.186741
     2:       0.21973
     3:      0.567955
     4:     0.0324439

  Vector:

     0:      0.884057
     1:      0.084889
     2:    -0.0780304
     3:      -0.14874
     4:     -0.427814

  Vector:

     0:      0.359667
     1:      0.132656
     2:      0.524983
     3:   -0.00812189
     4:      0.759847

r8vec_uniform_unit_test():
  Normal end of execution.

COND_TEST
  Python version: 3.6.9
  COND is the condition number estimator built into Python.

  Matrix               Order   Condition        Estimate

         Combinatorial     4              10              10
                CONEX1     4           80601           80601
                CONEX2     3          601.97          601.97
                CONEX3     5              80              80
                CONEX4     4            4488            4488
                 KAHAN     4         646.712         646.712
                RANDOM     4         183.209         183.209
                RANDOM     4         61.5522         61.5522
                RANDOM     4         21.5016         21.5016
                RANDOM     4         34.8777         34.8777
                RANDOM     4         26.6349         26.6349

COND_TEST
  Normal end of execution.

CONDITION_HAGER_TEST
  Python version: 3.6.9
  CONDITION_HAGER estimates the L1 condition number
  for a matrix in general storage.

  Matrix               Order   Condition         Hager

         Combinatorial     4              10              10
                CONEX1     4           80601           80601
                CONEX2     3          601.97          601.97
                CONEX3     5              80              80
                CONEX4     4            4488            4488
                 KAHAN     4         646.712         646.712
                RANDOM     4         388.287         388.287
                RANDOM     4         39.0221         39.0221
                RANDOM     4         15.7248         15.7248
                RANDOM     4         36.1512         36.1512
                RANDOM     4         29.6181         29.6181

CONDITION_HAGER_TEST
  Normal end of execution.

CONDITION_LINPACK_TEST
  Python version: 3.6.9
  CONDITION_LINPACK estimates the L1 condition number
  for a matrix in general storage.

  Matrix               Order   Condition       Linpack

         Combinatorial     4              10               7
                CONEX1     4           80601         565.586
                CONEX2     3          601.97         7.50657
                CONEX3     5              80               5
                CONEX4     4            4488         3238.09
                 KAHAN     4         646.712         574.664
                RANDOM     4         29.5402         18.2319
                RANDOM     4         12.9288         8.87742
                RANDOM     4         17.0685         13.3868
                RANDOM     4         21.6827           13.78
                RANDOM     4          168.61         119.884

CONDITION_LINPACK_TEST
  Normal end of execution.

CONDITION_SAMPLE1_TEST
  Python version: 3.6.9
  CONDITION_SAMPLE1 estimates the L1 condition number using sampling
  for a matrix in general storage.

  Matrix                 Samples Order   Condition        Estimate

         Combinatorial        10     4              10         8.52549
         Combinatorial      1000     4              10         9.44676
         Combinatorial    100000     4              10         9.60118

                CONEX1        10     4           80601         8.67311
                CONEX1      1000     4           80601         26.3571
                CONEX1    100000     4           80601         521.061

                CONEX2        10     3          601.97         5.14431
                CONEX2      1000     3          601.97         31.2494
                CONEX2    100000     3          601.97         227.307

                CONEX3        10     5              80         1.99191
                CONEX3      1000     5              80         22.5361
                CONEX3    100000     5              80         28.3232

                CONEX4        10     4            4488         4.11941
                CONEX4      1000     4            4488         65.5935
                CONEX4    100000     4            4488         418.042

                 KAHAN        10     4         646.712         5.59252
                 KAHAN      1000     4         646.712         21.0937
                 KAHAN    100000     4         646.712         146.933

                RANDOM        10     4         117.601          7.2247
                RANDOM      1000     4         117.601         23.4906
                RANDOM    100000     4         117.601         88.5178

                RANDOM        10     4         28.7475         9.05511
                RANDOM      1000     4         28.7475          22.027
                RANDOM    100000     4         28.7475          24.507

                RANDOM        10     4         71.7608         2.89676
                RANDOM      1000     4         71.7608         27.1134
                RANDOM    100000     4         71.7608         54.2919

                RANDOM        10     4         19.0126         4.96928
                RANDOM      1000     4         19.0126         12.8471
                RANDOM    100000     4         19.0126          17.778

                RANDOM        10     4         73.2643         3.72973
                RANDOM      1000     4         73.2643           12.71
                RANDOM    100000     4         73.2643         53.5546

CONDITION_SAMPLE1_TEST
  Normal end of execution.

condition_test:
  Normal end of execution.
Tue Oct 19 11:26:19 2021
