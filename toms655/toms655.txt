Tue Oct 19 17:25:16 2021

toms655_test():
  Python version: 3.6.9
  Test toms655().

imtqlx_test
  Python version: 3.6.9
  imtqlx takes a symmetric tridiagonal matrix A
  and computes its eigenvalues LAM.
  It also accepts a vector Z and computes Q'*Z,
  where Q is the matrix that diagonalizes A.

  Computed eigenvalues:

     0:      0.267949
     1:             1
     2:             2
     3:             3
     4:       3.73205

  Exact eigenvalues:

     0:      0.267949
     1:             1
     2:             2
     3:             3
     4:       3.73205

  Vector Z:

     0:             1
     1:             1
     2:             1
     3:             1
     4:             1

  Vector Q*Z:

     0:       -2.1547
     1:   -1.8855e-16
     2:       0.57735
     3:   1.66533e-16
     4:     -0.154701

imtqlx_test:
  Normal end of execution.

parchk_test:
  Python version: 3.6.9
  parchk checks quadrature rule parameters.

  KIND   M           ALPHA            BETA  CHECK?


parchk - Fatal error!
  kind < 1.
  kind =  0
     0   0             0.5             0.5  FAILED
     1   0             0.5             0.5  True
     2   0             0.5             0.5  True
     3   0            -0.5             0.5  True

parchk - Fatal error!
  ( 3 <= KIND <= 8 ) and ALPHA <= -1.
     3   0            -1.5             0.5  FAILED
     4   0            -0.5             0.5  True

parchk - Fatal error!
  ( 3 <= KIND <= 8 ) and ALPHA <= -1.
     4   0            -1.5             0.5  FAILED

parchk - Fatal error!
  KIND == 4 and BETA <= -1.0.
     4   0             0.5              -2  FAILED
     5   0            -0.5             0.5  True

parchk - Fatal error!
  ( 3 <= KIND <= 8 ) and ALPHA <= -1.
     5   0            -1.5             0.5  FAILED
     6   0            -0.5             0.5  True

parchk - Fatal error!
  ( 3 <= KIND <= 8 ) and ALPHA <= -1.
     6   0            -1.5             0.5  FAILED
     7   0            -0.5             0.5  True

parchk - Fatal error!
  ( 3 <= KIND <= 8 ) and ALPHA <= -1.
     7   0            -1.5             0.5  FAILED

parchk - Fatal error!
  ( 3 <= KIND <= 8 ) and ALPHA <= -1.
     8   3              -2              -3  FAILED
     8   3            -0.5              -4  True

parchk - Fatal error!
  KIND == 8 but 0 <= ALPHA + BETA + M + 1.
     8   3            -0.5              -3  FAILED
     9   0             0.5             0.5  True

parchk_test():
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 1
  with ALPHA = 0, BETA = 0

  Order          Moment

      0               2
      1               0
      2        0.666667
      3               0
      4             0.4

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 2
  with ALPHA = 0, BETA = 0

  Order          Moment

      0         3.14159
      1               0
      2          1.5708
      3               0
      4          1.1781

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 3
  with ALPHA = 0.5, BETA = 0

  Order          Moment

      0          1.5708
      1               0
      2        0.392699
      3               0
      4         0.19635

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 4
  with ALPHA = 0.25, BETA = 0.75

  Order          Moment

      0         1.66608
      1         0.27768
      2         0.45123
      3        0.156195
      4        0.238631

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 5
  with ALPHA = 2, BETA = 0

  Order          Moment

      0               2
      1               6
      2              24
      3             120
      4             720

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 6
  with ALPHA = 1, BETA = 0

  Order          Moment

      0               1
      1               0
      2               1
      3               0
      4               2

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 7
  with ALPHA = 2, BETA = 0

  Order          Moment

      0        0.666667
      1               0
      2             0.4
      3               0
      4        0.285714

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 8
  with ALPHA = -0.5, BETA = -6

  Order          Moment

      0        0.773126
      1       0.0859029
      2       0.0368155
      3       0.0368155
      4       0.0859029

wm_tester:
  Normal end of execution.

wm_tester:
  Python version: 3.6.9
  wm_test computes moments for rule 9
  with ALPHA = 0, BETA = 0

  Order          Moment

      0          1.5708
      1               0
      2        0.392699
      3               0
      4         0.19635

wm_tester:
  Normal end of execution.

wm_test
  Normal end of execution.

toms655_test():
  Normal end of execution.
Tue Oct 19 17:25:16 2021
