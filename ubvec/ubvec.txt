Tue Oct 19 17:31:57 2021

ubvec_test
  Python version: 3.6.9
  Test ubvec().

ksubset_colex_unrank_test
  Python version: 3.6.9
  ksubset_colex_unrank unranks K-subsets of an N set,
  using the colexicographic ordering:

  The element of rank 5:


  The element:

     0       5
     1       3
     2       1

ksubset_colex_unrank_test:
  Normal end of execution.

ksubset_enum_test
  Python version: 3.6.9
  ksubset_enum enumerates K-subsets of an N set.

      K:   0    1    2    3    4    5
   N

   0:     1
   1:     1   1
   2:     1   2   1
   3:     1   3   3   1
   4:     1   4   6   4   1
   5:     1   5  10  10   5   1

ksubset_enum_test:
  Normal end of execution.

morse_thue_test
  Python version: 3.6.9
  morse_thue computes the Morse Thue numbers.

     0  0
     1  1
     2  1
     3  0
     4  1
     5  0
     6  0
     7  1
     8  1
     9  0
    10  0
    11  1
    12  0
    13  1
    14  1
    15  0
    16  1
    17  0
    18  0
    19  1
    20  0
    21  1
    22  1
    23  0
    24  0
    25  1
    26  1
    27  0
    28  1
    29  0
    30  0
    31  1
    32  1
    33  0
    34  0
    35  1
    36  0
    37  1
    38  1
    39  0
    40  0
    41  1
    42  1
    43  0
    44  1
    45  0
    46  0
    47  1
    48  0
    49  1
    50  1
    51  0
    52  1
    53  0
    54  0
    55  1
    56  1
    57  0
    58  0
    59  1
    60  0
    61  1
    62  1
    63  0
    64  1
    65  0
    66  0
    67  1
    68  0
    69  1
    70  1
    71  0
    72  0
    73  1
    74  1
    75  0
    76  1
    77  0
    78  0
    79  1
    80  0
    81  1
    82  1
    83  0
    84  1
    85  0
    86  0
    87  1
    88  1
    89  0
    90  0
    91  1
    92  0
    93  1
    94  1
    95  0
    96  0
    97  1
    98  1
    99  0
   100  1

morse_thue_test
  Normal end of execution.

nim_sum_test
  nim_sum computes the Nim sum of two integers.

    I    J    Nim(I+J)


  I1, I2, I3 in decimal:

  985
  806
  255

  I1, I2, I3 in binary:

  10011011110000000000000000000000
  01100100110000000000000000000000
  11111111000000000000000000000000

  I1, I2, I3 in decimal:

  999
  382
  665

  I1, I2, I3 in binary:

  11100111110000000000000000000000
  01111110100000000000000000000000
  10011001010000000000000000000000

  I1, I2, I3 in decimal:

  345
  363
   50

  I1, I2, I3 in binary:

  10011010100000000000000000000000
  11010110100000000000000000000000
  01001100000000000000000000000000

  I1, I2, I3 in decimal:

   69
  676
  737

  I1, I2, I3 in binary:

  10100010000000000000000000000000
  00100101010000000000000000000000
  10000111010000000000000000000000

  I1, I2, I3 in decimal:

  562
  213
  743

  I1, I2, I3 in binary:

  01001100010000000000000000000000
  10101011000000000000000000000000
  11100111010000000000000000000000

nim_sum_test:
  Normal end of execution.

ubvec_add_test
  ubvec_add adds unsigned binary vectors representing
  unsigned integers

        I        J        K = I + J


        21        47
  Directly:                 68
  ubvec_add                 68

        69         0
  Directly:                 69
  ubvec_add                 69

        46         6
  Directly:                 52
  ubvec_add                 52

        90       100
  Directly:                190
  ubvec_add                190

        41        27
  Directly:                 68
  ubvec_add                 68

        94        37
  Directly:                131
  ubvec_add                131

        35        36
  Directly:                 71
  ubvec_add                 71

        12        98
  Directly:                110
  ubvec_add                110

        77        88
  Directly:                165
  ubvec_add                165

        49        33
  Directly:                 82
  ubvec_add                 82

ubvec_add_test
  Normal end of execution.

ubvec_and_test
  ubvec_and computes the AND of two
  unsigned binary vectors representing unsigned integers

        I        J        K = I AND J

        83        80        80
        29        83        17
         4        80         0
        79        33         1
        62        46        46
        27         0         0
         1        96         0
        64         8         0
         6        20         4
       100        14         4

ubvec_check_test
  Python version: 3.6.9
  ubvec_check check an unsigned binary vector.

  CHECK?     UBVEC

   True:    10011
  False:    10019
  False:    13011

ubvec_check_test
  Normal end of execution.

ubvec_complement1_test
  Python version: 3.6.9
  ubvec_complement1 returns the 1's complement
  of an unsigned binary vector.

  UBVEC  Comp1

  01111  01111
  10011  10011
  00010  00010
  00000  00000
  11010  11010

ubvec_complement_test
  Normal end of execution.

ubvec_enum_test
  Python version: 3.6.9
  ubvec_enum enumerates unsigned binary vectors
  of N digits

   N      Number

   0         1
   1         2
   2         4
   3         8
   4        16
   5        32
   6        64
   7       128
   8       256
   9       512
  10      1024

ubvec_enum_test
  Normal end of execution.

ubvec_next_test
  Python version: 3.6.9
  ubvec_next computes the "next" unsigned binary vector.

  0000
  1000
  0100
  1100
  0010
  1010
  0110
  1110
  0001
  1001
  0101
  1101
  0011
  1011
  0111
  1111
  0000

ubvec_next_test
  Normal end of execution.

ubvec_next_gray_test
  Python version: 3.6.9
  ubvec_next_gray returns the next UBVEC in the Gray code.

   K  UBVEC

   0   0 0 0 0
   1   0 0 0 1
   2   0 0 1 1
   3   0 0 1 0
   4   0 1 1 0
   5   0 1 1 1
   6   0 1 0 1
   7   0 1 0 0
   8   1 1 0 0
   9   1 1 0 1
  10   1 1 1 1
  11   1 1 1 0
  12   1 0 1 0
  13   1 0 1 1
  14   1 0 0 1
  15   1 0 0 0

ubvec_next_gray_test
  Normal end of execution.

ubvec_or_test
  ubvec_or computes the OR of two
  unsigned binary vectors representing unsigned integers

        I        J        K = I OR J

        67        99        99
        25        67        91
        49        75       123
        38        44        46
        20        52        52
        69         3        71
        46        89       127
         9        57        57
        44        71       111
        54        84       118

ubvec_or_test
  Normal end of execution.

ubvec_print_test
  Python version: 3.6.9
  ubvec_print prints an unsigned binary vector.

  UBVEC:
  0011101001

ubvec_print_test
  Normal end of execution.

ubvec_random_test
  Python version: 3.6.9
  ubvec_random randomizes an unsigned binary vector.

  11111
  01010
  10101
  11111
  11110

ubvec_random_test
  Normal end of execution.

ubvec_rank_gray_test
  Python version: 3.6.9
  ubvec_rank_gray ranks a UBVEC in the Gray ordering.

  UBVEC   Rank

   0 0 0 0 0   0
   0 0 0 0 1   1
   0 0 0 1 0   3
   0 0 0 1 1   2
   0 0 1 0 0   7
   0 0 1 0 1   6
   0 0 1 1 0   4
   0 0 1 1 1   5
   0 1 0 0 0  15
   0 1 0 0 1  14
   0 1 0 1 0  12
   0 1 0 1 1  13
   0 1 1 0 0   8
   0 1 1 0 1   9
   0 1 1 1 0  11
   0 1 1 1 1  10
   1 0 0 0 0  31
   1 0 0 0 1  30
   1 0 0 1 0  28
   1 0 0 1 1  29
   1 0 1 0 0  24
   1 0 1 0 1  25
   1 0 1 1 0  27
   1 0 1 1 1  26
   1 1 0 0 0  16
   1 1 0 0 1  17
   1 1 0 1 0  19
   1 1 0 1 1  18
   1 1 1 0 0  23
   1 1 1 0 1  22
   1 1 1 1 0  20
   1 1 1 1 1  21

ubvec_rank_gray_test
  Normal end of execution.

ubvec_reverse_test
  Python version: 3.6.9
  ubvec_reverse reverses an unsigned binary vector.

  UBVEC  Reversed

  10010  01001
  00010  01000
  10000  00001
  10110  01101
  01010  01010

ubvec_reverse_test
  Normal end of execution.

ubvec_to_ui4_test
  Python version: 3.6.9
  ubvec_to_ui4 converts an unsigned binary vector
  to an unsigned integer

  UI4 --> UBVEC  -->  UI4

   0  0000000000   0
   1  0000000001   1
   2  0000000010   2
   3  0000000011   3
   4  0000000100   4
   5  0000000101   5
   6  0000000110   6
   7  0000000111   7
   8  0000001000   8
   9  0000001001   9
  10  0000001010  10

ubvec_to_ui4_test
  Normal end of execution.

ubvec_unrank_gray_test
  Python version: 3.6.9
  ubvec_unrank_gray unranks a UBVEC.

  Rank  UBVEC

     0   0 0 0 0 0
     1   0 0 0 0 1
     2   0 0 0 1 1
     3   0 0 0 1 0
     4   0 0 1 1 0
     5   0 0 1 1 1
     6   0 0 1 0 1
     7   0 0 1 0 0
     8   0 1 1 0 0
     9   0 1 1 0 1
    10   0 1 1 1 1
    11   0 1 1 1 0
    12   0 1 0 1 0
    13   0 1 0 1 1
    14   0 1 0 0 1
    15   0 1 0 0 0
    16   1 1 0 0 0
    17   1 1 0 0 1
    18   1 1 0 1 1
    19   1 1 0 1 0
    20   1 1 1 1 0
    21   1 1 1 1 1
    22   1 1 1 0 1
    23   1 1 1 0 0
    24   1 0 1 0 0
    25   1 0 1 0 1
    26   1 0 1 1 1
    27   1 0 1 1 0
    28   1 0 0 1 0
    29   1 0 0 1 1
    30   1 0 0 0 1
    31   1 0 0 0 0

ubvec_unrank_gray_test
  Normal end of execution.

ubvec_unrank_grlex_test
  Python version: 3.6.9
  ubvec_unrank_grlex returns the UBVEC of given rank
  in the graded lexicographical ordering.
  --  --------
   0   0 0 0 0
  --  --------
   1   0 0 0 1
   2   0 0 1 0
   3   0 1 0 0
   4   1 0 0 0
  --  --------
   5   0 0 1 1
   6   0 1 0 1
   7   0 1 1 0
   8   1 0 0 1
   9   1 0 1 0
  10   1 1 0 0
  --  --------
  11   0 1 1 1
  12   1 0 1 1
  13   1 1 0 1
  14   1 1 1 0
  --  --------
  15   1 1 1 1

ubvec_unrank_grlex_test
  Normal end of execution.

ubvec_xor_test
  ubvec_xor exclusive-ors unsigned binary vectors representing
  unsigned integers

        I        J        K = I XOR J

        88        32       120
        96        67        35
       100        28       120
        63        48        15
        76         0        76
        34        38         4
        10        36        46
        68        48       116
        19        72        91
        53        42        31

ubvec_xor_test
  Normal end of execution.

ui4_rank_gray_test
  Python version: 3.6.9
  ui4_rank_gray ranks a UI4 in the Gray ordering.

 UI4  Rank  (binary)

   0     0   0 0 0 0 0
   1     1   0 0 0 0 1
   2     3   0 0 0 1 0
   3     2   0 0 0 1 1
   4     7   0 0 1 0 0
   5     6   0 0 1 0 1
   6     4   0 0 1 1 0
   7     5   0 0 1 1 1
   8    15   0 1 0 0 0
   9    14   0 1 0 0 1
  10    12   0 1 0 1 0
  11    13   0 1 0 1 1
  12     8   0 1 1 0 0
  13     9   0 1 1 0 1
  14    11   0 1 1 1 0
  15    10   0 1 1 1 1
  16    31   1 0 0 0 0
  17    30   1 0 0 0 1
  18    28   1 0 0 1 0
  19    29   1 0 0 1 1
  20    24   1 0 1 0 0
  21    25   1 0 1 0 1
  22    27   1 0 1 1 0
  23    26   1 0 1 1 1
  24    16   1 1 0 0 0
  25    17   1 1 0 0 1
  26    19   1 1 0 1 0
  27    18   1 1 0 1 1
  28    23   1 1 1 0 0
  29    22   1 1 1 0 1
  30    20   1 1 1 1 0
  31    21   1 1 1 1 1

ui4_rank_gray_test
  Normal end of execution.

ui4_to_ubvec_test
  Python version: 3.6.9
  ui4_to_ubvec converts an unsigned integer to an
  unsigned binary vector;

  UI4 --> UBVEC  -->  UI4

   0  0000000000   0
   1  0000000001   1
   2  0000000010   2
   3  0000000011   3
   4  0000000100   4
   5  0000000101   5
   6  0000000110   6
   7  0000000111   7
   8  0000001000   8
   9  0000001001   9
  10  0000001010  10

ui4_to_ubvec_test
  Normal end of execution.

ui4_unrank_gray_test
  Python version: 3.6.9
  ui4_unrank_gray unranks a Gray code.

  Rank   I  (binary)

   0     0   0 0 0 0 0
   1     1   0 0 0 0 1
   2     3   0 0 0 1 1
   3     2   0 0 0 1 0
   4     6   0 0 1 1 0
   5     7   0 0 1 1 1
   6     5   0 0 1 0 1
   7     4   0 0 1 0 0
   8    12   0 1 1 0 0
   9    13   0 1 1 0 1
  10    15   0 1 1 1 1
  11    14   0 1 1 1 0
  12    10   0 1 0 1 0
  13    11   0 1 0 1 1
  14     9   0 1 0 0 1
  15     8   0 1 0 0 0
  16    24   1 1 0 0 0
  17    25   1 1 0 0 1
  18    27   1 1 0 1 1
  19    26   1 1 0 1 0
  20    30   1 1 1 1 0
  21    31   1 1 1 1 1
  22    29   1 1 1 0 1
  23    28   1 1 1 0 0
  24    20   1 0 1 0 0
  25    21   1 0 1 0 1
  26    23   1 0 1 1 1
  27    22   1 0 1 1 0
  28    18   1 0 0 1 0
  29    19   1 0 0 1 1
  30    17   1 0 0 0 1
  31    16   1 0 0 0 0

ui4_unrank_gray_test
  Normal end of execution.

ubvec_test:
  Normal end of execution.
Tue Oct 19 17:31:57 2021
