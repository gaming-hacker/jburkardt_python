Tue Oct 19 11:54:56 2021

isbn_test():
  Python version: 3.6.9
  Test isbn().

ch_is_digit_test
  Python version: 3.6.9
  ch_is_digit is TRUE if a character is a decimal digit.

         0  "0"  True
         1  "1"  True
         2  "2"  True
         3  "3"  True
         4  "4"  True
         5  "5"  True
         6  "6"  True
         7  "7"  True
         8  "8"  True
         9  "9"  True
        10  "X"  False
        11  "?"  False
        12  " "  False

ch_is_digit_test:
  Normal end of execution.

ch_is_isbn_digit_test
  Python version: 3.6.9
  ch_is_isbn_digit is TRUE if a character is an ISBN digit.

  "0"  True
  "1"  True
  "2"  True
  "3"  True
  "4"  True
  "5"  True
  "6"  True
  "7"  True
  "8"  True
  "9"  True
  "X"  True
  "x"  True
  "Y"  False
  "*"  False
  "?"  False
  " "  False

ch_is_isbn_digit_test:
  Normal end of execution.

ch_to_digit_test
  Python version: 3.6.9
  ch_to_digit: character -> decimal digit

         0  "0"         0
         1  "1"         1
         2  "2"         2
         3  "3"         3
         4  "4"         4
         5  "5"         5
         6  "6"         6
         7  "7"         7
         8  "8"         8
         9  "9"         9
        10  "X"        -1
        11  "?"        -1
        12  " "        -1

ch_to_digit_test:
  Normal end of execution.

i4_to_isbn_digit_test
  Python version: 3.6.9
  i4_to_isbn_digit converts digits 0 to 10 to an ISBN digit.

         0     "0"
         1     "1"
         2     "2"
         3     "3"
         4     "4"
         5     "5"
         6     "6"
         7     "7"
         8     "8"
         9     "9"
        10     "X"

i4_to_isbn_digit_test:
  Normal end of execution.

isbn_check_digit_calculate_test
  Python version: 3.6.9
  isbn_check_digit_calculate calculates the 10-th digit
  (the check digit) of a 10-digit ISBN.

  Check digit of "0-306-40615-2" is "2", expecting "2"
  Check digit of "0 8493 9640" is "9", expecting "9"
  Check digit of "158488059" is "7", expecting "7"
  Check digit of "246897531" is "6", expecting "6"
  Check digit of "135798642" is "4", expecting "4"

isbn_check_digit_calculate_test:
  Normal end of execution.

isbn_is_valid_test
  Python version: 3.6.9
  isbn_is_valid reports whether a ISBN is valid.

  Validity of "0-306-40615-2" is True, expecting True
  Validity of "0-326-40615-2" is False, expecting False
  Validity of "0 8493 9640 9" is True, expecting True
  Validity of "0 8493 9640 3" is False, expecting False
  Validity of "0-3870-9654-X" is True, expecting True
  Validity of "0-201-38597-x" is True, expecting True

isbn_is_valid_test:
  Normal end of execution.

isbn_digit_to_i4_test
  Python version: 3.6.9
  isbn_digit_to_i4 converts an ISBN digit to an I4

  "0"       0
  "1"       1
  "2"       2
  "3"       3
  "4"       4
  "5"       5
  "6"       6
  "7"       7
  "8"       8
  "9"       9
  "X"      10
  "x"      10
  "Y"      -1
  "*"      -1
  "?"      -1
  " "      -1

isbn_digit_to_i4_test:
  Normal end of execution.

s_to_digits_test
  Python version: 3.6.9
  s_to_digits: string -> digit vector

  Test string: "34E94-70.6"

  Extracted 5 digits:

     0       3
     1       4
     2       9
     3       4
     4       7

  Test string: "34E94-70.6"

  Extracted 7 digits:

     0       3
     1       4
     2       9
     3       4
     4       7
     5       0
     6       6

s_to_digits_test
  Normal end of execution.

s_to_isbn_digits_test
  Python version: 3.6.9
  s_to_isbn_digits: string -> ISBN digit vector

  Test string: "34E9X-70.6"

  Extracted 5 digits:

     0       3
     1       4
     2       9
     3      10
     4       7

  Test string: "34E9X-70.6"

  Extracted 7 digits:

     0       3
     1       4
     2       9
     3      10
     4       7
     5       0
     6       6

s_to_isbn_digits_test
  Normal end of execution.

ISBN_test:
  Normal end of execution.
Tue Oct 19 11:54:56 2021
